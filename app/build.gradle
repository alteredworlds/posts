apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId "com.example.twcgilbert.myapplication"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name
        testInstrumentationRunner "com.example.twcgilbert.postsapp.app.PostsTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        test {
            java.srcDir "$projectDir/src/testShared/java"
        }

        androidTest {
            java.srcDir "$projectDir/src/testShared/java"
        }
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support:recyclerview-v7:$support_library_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:support-v4:$support_library_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // annotation processing for normal builds
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // DI (including dagger-android)
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    // Okhttp logging
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // Async image display
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // memory leak detection utility library
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    // LOCAL UNIT TESTS: dependencies
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-all:$mockito_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    // LOCAL UNIT TESTS: annotation processing
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-android-processor:$dagger_version"

    // ANDROID UNIT TESTS: dependencies
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espresso_version") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestImplementation "com.azimolabs.conditionwatcher:conditionwatcher:$conditionwatcher_version"
    androidTestImplementation "com.google.dagger:dagger-android:$dagger_version"
    androidTestImplementation "com.google.dagger:dagger-android-support:$dagger_version"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    // ANDROID UNIT TESTS: annotation processing
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$dagger_version"
}
